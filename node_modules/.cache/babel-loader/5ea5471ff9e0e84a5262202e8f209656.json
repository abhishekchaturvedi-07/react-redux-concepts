{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Documents/redux-react-bootstrap-crud/redux-react-bootstrap-crud/src/components/Modal/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Typography, Divider, Chip, TextField, Button } from \"@material-ui/core\";\nimport SimpleModal from \"@material-ui/core/Modal\";\nimport emailjs from \"emailjs-com\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = ({\n  isOpen,\n  setIsOpen,\n  showFeedback\n}) => {\n  _s();\n\n  const classes = useStyles();\n  let body;\n\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.sendForm(\"gmail\", \"alan_ai\", e.target, \"user_dhVImkgxaL27bxQ8pLPQ5\").then(result => {\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    });\n  };\n\n  if (isOpen && showFeedback) {\n    body = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Something went wrong? Send us some feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: sendEmail,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          label: \"Your name\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email\",\n          type: \"email\",\n          label: \"Your email\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"feedback\",\n          multiline: true,\n          rows: 5,\n          helperText: \"Describe the problems that you've encontered.\",\n          label: \"Feedback\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"outlined\",\n          color: \"primary\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  } else {\n    body = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.infoContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"News by Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chipContainer,\n          children: [\"Business\", \"Entertainment\", \"General\", \"Health\", \"Science\", \"Sports\", \"Technology\"].map(category => /*#__PURE__*/_jsxDEV(Chip, {\n            label: category,\n            color: \"primary\",\n            className: classes.chip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        className: classes.trySaying,\n        children: [\"Try saying: \\\"Give me the latest\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Business\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), \" \", \"news\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.infoContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"News by Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chipContainer,\n          children: [[\"Donald Trump\", \"Bitcoin\", \"PlayStation 5\", \"Smartphones\"].map(term => /*#__PURE__*/_jsxDEV(Chip, {\n            label: term,\n            color: \"primary\",\n            className: classes.chip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"...and more\",\n            className: classes.chip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        className: classes.trySaying,\n        children: [\"Try saying: \\\"What's up with\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"PlayStation 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.infoContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"News by Sources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chipContainer,\n          children: [[\"CNN\", \"Wired\", \"BBC News\", \"Time\", \"IGN\", \"Buzzfeed\", \"ABC News\"].map(source => /*#__PURE__*/_jsxDEV(Chip, {\n            label: source,\n            color: \"primary\",\n            className: classes.chip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"...and more\",\n            className: classes.chip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        className: classes.trySaying,\n        children: [\"Try saying: \\\"Give me the news from\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"CNN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(SimpleModal, {\n    open: isOpen,\n    onClose: () => setIsOpen(false),\n    children: body\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Modal, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/abhishek/Documents/redux-react-bootstrap-crud/redux-react-bootstrap-crud/src/components/Modal/Modal.js"],"names":["React","Typography","Divider","Chip","TextField","Button","SimpleModal","emailjs","useStyles","Modal","isOpen","setIsOpen","showFeedback","classes","body","sendEmail","e","preventDefault","sendForm","target","then","result","console","log","text","error","paper","form","infoContainer","chipContainer","map","category","chip","trySaying","term","source"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Typography,\n  Divider,\n  Chip,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport SimpleModal from \"@material-ui/core/Modal\";\nimport emailjs from \"emailjs-com\";\n\nimport useStyles from \"./styles\";\n\nconst Modal = ({ isOpen, setIsOpen, showFeedback }) => {\n  const classes = useStyles();\n  let body;\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\"gmail\", \"alan_ai\", e.target, \"user_dhVImkgxaL27bxQ8pLPQ5\")\n      .then(\n        (result) => {\n          console.log(result.text);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  };\n\n  if (isOpen && showFeedback) {\n    body = (\n      <div className={classes.paper}>\n        <Typography variant=\"h3\">\n          Something went wrong? Send us some feedback\n        </Typography>\n        <br />\n        <form className={classes.form} onSubmit={sendEmail}>\n          <TextField name=\"name\" label=\"Your name\" variant=\"outlined\" />\n          <br />\n          <TextField\n            name=\"email\"\n            type=\"email\"\n            label=\"Your email\"\n            variant=\"outlined\"\n          />\n          <br />\n          <TextField\n            name=\"feedback\"\n            multiline\n            rows={5}\n            helperText=\"Describe the problems that you've encontered.\"\n            label=\"Feedback\"\n            variant=\"outlined\"\n          />\n          <br />\n          <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\n            Send\n          </Button>\n        </form>\n      </div>\n    );\n  } else {\n    body = (\n      <div className={classes.paper}>\n        <Typography variant=\"h3\">Instructions</Typography>\n        <Divider />\n        <div className={classes.infoContainer}>\n          <Typography variant=\"h5\">News by Categories</Typography>\n          <div className={classes.chipContainer}>\n            {[\n              \"Business\",\n              \"Entertainment\",\n              \"General\",\n              \"Health\",\n              \"Science\",\n              \"Sports\",\n              \"Technology\",\n            ].map((category) => (\n              <Chip label={category} color=\"primary\" className={classes.chip} />\n            ))}\n          </div>\n        </div>\n        <Typography variant=\"body1\" className={classes.trySaying}>\n          Try saying: &quot;Give me the latest{\" \"}\n          <strong>\n            <em>Business</em>\n          </strong>{\" \"}\n          news&quot;\n        </Typography>\n        <Divider />\n        <div className={classes.infoContainer}>\n          <Typography variant=\"h5\">News by Terms</Typography>\n          <div className={classes.chipContainer}>\n            {[\"Donald Trump\", \"Bitcoin\", \"PlayStation 5\", \"Smartphones\"].map(\n              (term) => (\n                <Chip label={term} color=\"primary\" className={classes.chip} />\n              )\n            )}\n            <Chip label=\"...and more\" className={classes.chip} />\n          </div>\n        </div>\n        <Typography variant=\"body1\" className={classes.trySaying}>\n          Try saying: &quot;What&apos;s up with{\" \"}\n          <strong>\n            <em>PlayStation 5</em>\n          </strong>\n          &quot;\n        </Typography>\n        <Divider />\n        <div className={classes.infoContainer}>\n          <Typography variant=\"h5\">News by Sources</Typography>\n          <div className={classes.chipContainer}>\n            {[\n              \"CNN\",\n              \"Wired\",\n              \"BBC News\",\n              \"Time\",\n              \"IGN\",\n              \"Buzzfeed\",\n              \"ABC News\",\n            ].map((source) => (\n              <Chip label={source} color=\"primary\" className={classes.chip} />\n            ))}\n            <Chip label=\"...and more\" className={classes.chip} />\n          </div>\n        </div>\n        <Typography variant=\"body1\" className={classes.trySaying}>\n          Try saying: &quot;Give me the news from{\" \"}\n          <strong>\n            <em>CNN</em>\n          </strong>\n          &quot;\n        </Typography>\n      </div>\n    );\n  }\n\n  return (\n    <SimpleModal open={isOpen} onClose={() => setIsOpen(false)}>\n      {body}\n    </SimpleModal>\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}