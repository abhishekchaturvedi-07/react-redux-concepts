{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Documents/redux-react-bootstrap-crud/redux-react-bootstrap-crud/src/components/contacts/Contacts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectAllContact, clearAllContact, deleteSelectedContact } from \"../../redux/actions/ContactAction\";\nimport ContactData from \"./ContactData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const contactsData = useSelector(state => state.contact.contacts);\n  console.log(contactsData);\n  const [selectAll, setSelectAll] = useState(false);\n  const contacts = useSelector(state => state.contact.contacts);\n  const selectedContacts = useSelector(state => state.contact.selectedContacts);\n  const dispatch = useDispatch(); // dependecy for select All\n\n  useEffect(() => {\n    if (selectAll) {\n      dispatch(selectAllContact(contacts.map(contact => contact.id)));\n    } else {\n      dispatch(clearAllContact());\n    }\n  }, [selectAll]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [selectedContacts.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger mb-3\",\n      onClick: () => dispatch(deleteSelectedContact()),\n      children: [\" \", \"Delete All\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-heading text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-control custom-checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"selectAll\",\n                type: \"checkbox\",\n                className: \"custom-control-input\",\n                value: selectAll,\n                onClick: () => setSelectAll(!selectAll)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"selectAll\",\n                className: \"custom-control-label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: contactsData.map(contact => /*#__PURE__*/_jsxDEV(ContactData, {\n          contact: contact,\n          selectAll: selectAll\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"l9VXfe4QRpZy9gToMQ9VIMdTGcQ=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/abhishek/Documents/redux-react-bootstrap-crud/redux-react-bootstrap-crud/src/components/contacts/Contacts.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","selectAllContact","clearAllContact","deleteSelectedContact","ContactData","Contacts","contactsData","state","contact","contacts","console","log","selectAll","setSelectAll","selectedContacts","dispatch","map","id","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectAllContact,\n  clearAllContact,\n  deleteSelectedContact,\n} from \"../../redux/actions/ContactAction\";\nimport ContactData from \"./ContactData\";\n\nconst Contacts = () => {\n  const contactsData = useSelector((state) => state.contact.contacts);\n  console.log(contactsData);\n  const [selectAll, setSelectAll] = useState(false);\n  const contacts = useSelector((state) => state.contact.contacts);\n  const selectedContacts = useSelector(\n    (state) => state.contact.selectedContacts\n  );\n  const dispatch = useDispatch();\n  // dependecy for select All\n  useEffect(() => {\n    if (selectAll) {\n      dispatch(selectAllContact(contacts.map((contact) => contact.id)));\n    } else {\n      dispatch(clearAllContact());\n    }\n  }, [selectAll]);\n  return (\n    <div>\n      {selectedContacts.length > 0 ? (\n        <button\n          className=\"btn btn-danger mb-3\"\n          onClick={() => dispatch(deleteSelectedContact())}\n        >\n          {\" \"}\n          Delete All\n        </button>\n      ) : null}\n      <table className=\"table shadow\">\n        <thead>\n          <tr className=\"bg-heading text-white\">\n            <th>\n              <div className=\"custom-control custom-checkbox\">\n                <input\n                  id=\"selectAll\"\n                  type=\"checkbox\"\n                  className=\"custom-control-input\"\n                  value={selectAll}\n                  onClick={() => setSelectAll(!selectAll)}\n                />\n                <label\n                  htmlFor=\"selectAll\"\n                  className=\"custom-control-label\"\n                ></label>\n              </div>\n            </th>\n            <th>Name</th>\n            <th>Phone</th>\n            <th>Email</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {contactsData.map((contact) => (\n            <ContactData\n              contact={contact}\n              key={contact.id}\n              selectAll={selectAll}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}