{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Documents/react-badges/react-badges/src/components/NewsCards/NewsCards.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Grow, Typography } from \"@material-ui/core\";\nimport NewsCard from \"./NewsCard/NewsCard\";\nimport useStyles from \"./styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst infoCards = [{\n  color: \"#00838f\",\n  title: \"Latest News\",\n  info: \"Will reply with overall latest news\",\n  text: \"Give me the latest news\"\n}, {\n  color: \"#1565c0\",\n  title: \"Ask by Categories\",\n  info: \"Business, Entertainment, Health, Science, Sports, Technology\",\n  text: \"Give me the latest Technology news\"\n}, {\n  color: \"#4527a0\",\n  title: \"Ask by Terms\",\n  info: \"PlayStation, Smartphones...\",\n  text: \"What's up with PlayStation\"\n}];\n\nconst NewsCards = ({\n  articles,\n  activeArticle\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  if (!articles.length) {\n    return /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.container,\n        container: true,\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: infoCards.map(infoCard => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 4,\n          className: classes.infoCard,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.card,\n            style: {\n              backgroundColor: infoCard.color\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              style: {\n                color: \"orange\",\n                fontSize: 20\n              },\n              children: infoCard.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              style: {\n                color: \"whitesmoke\",\n                fontSize: 18\n              },\n              children: [\"Try saying: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 31\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: infoCard.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), infoCard.info ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              style: {\n                color: \"whitesmoke\",\n                fontSize: 15\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: infoCard.title.split(\" \")[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), \":\", infoCard.info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: articles.map((article, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        style: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(NewsCard, {\n          activeArticle: activeArticle,\n          i: i,\n          article: article\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewsCards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewsCards;\nexport default NewsCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsCards\");","map":{"version":3,"sources":["/Users/abhishek/Documents/react-badges/react-badges/src/components/NewsCards/NewsCards.js"],"names":["React","Grid","Grow","Typography","NewsCard","useStyles","infoCards","color","title","info","text","NewsCards","articles","activeArticle","classes","length","container","map","infoCard","card","backgroundColor","fontSize","split","article","i","display"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Grow, Typography } from \"@material-ui/core\";\n\nimport NewsCard from \"./NewsCard/NewsCard\";\nimport useStyles from \"./styles.js\";\n\nconst infoCards = [\n  {\n    color: \"#00838f\",\n    title: \"Latest News\",\n    info: \"Will reply with overall latest news\",\n    text: \"Give me the latest news\",\n  },\n  {\n    color: \"#1565c0\",\n    title: \"Ask by Categories\",\n    info: \"Business, Entertainment, Health, Science, Sports, Technology\",\n    text: \"Give me the latest Technology news\",\n  },\n  {\n    color: \"#4527a0\",\n    title: \"Ask by Terms\",\n    info: \"PlayStation, Smartphones...\",\n    text: \"What's up with PlayStation\",\n  },\n];\n\nconst NewsCards = ({ articles, activeArticle }) => {\n  const classes = useStyles();\n\n  if (!articles.length) {\n    return (\n      <Grow in>\n        <Grid\n          className={classes.container}\n          container\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          {infoCards.map((infoCard) => (\n            <Grid\n              item\n              xs={12}\n              sm={6}\n              md={4}\n              lg={4}\n              className={classes.infoCard}\n            >\n              <div\n                className={classes.card}\n                style={{ backgroundColor: infoCard.color }}\n              >\n                <Typography\n                  variant=\"h6\"\n                  component=\"h6\"\n                  style={{ color: \"orange\", fontSize: 20 }}\n                >\n                  {infoCard.title}\n                </Typography>\n                <Typography\n                  variant=\"h6\"\n                  component=\"h6\"\n                  style={{ color: \"whitesmoke\", fontSize: 18 }}\n                >\n                  Try saying: <br /> <i>{infoCard.text}</i>\n                </Typography>\n                {infoCard.info ? (\n                  <Typography\n                    variant=\"h6\"\n                    component=\"h6\"\n                    style={{ color: \"whitesmoke\", fontSize: 15 }}\n                  >\n                    <strong>{infoCard.title.split(\" \")[2]}</strong>:\n                    {infoCard.info}\n                  </Typography>\n                ) : null}\n              </div>\n            </Grid>\n          ))}\n        </Grid>\n      </Grow>\n    );\n  }\n\n  return (\n    <Grow in>\n      <Grid\n        className={classes.container}\n        container\n        alignItems=\"stretch\"\n        spacing={3}\n      >\n        {articles.map((article, i) => (\n          <Grid item xs={12} sm={6} md={4} lg={3} style={{ display: \"flex\" }}>\n            <NewsCard activeArticle={activeArticle} i={i} article={article} />\n          </Grid>\n        ))}\n      </Grid>\n    </Grow>\n  );\n};\n\nexport default NewsCards;\n"]},"metadata":{},"sourceType":"module"}