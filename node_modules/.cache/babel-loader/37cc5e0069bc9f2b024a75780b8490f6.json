{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Documents/react-badges/react-badges/src/components/editContact/EditContact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContact, updateContact } from '../../redux/actions/ContactAction'; // eslint-disable-next-line no-unused-vars\n\nimport shortid from 'shortid';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditContact = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const dispatch = useDispatch(); // for selecting the contact\n\n  const contact = useSelector(state => state.contact.contact);\n  const contactsNew = useSelector(state => state.contact.contacts);\n  let history = useHistory();\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (contactsNew !== null) {\n      const parentContact = contactsNew.find(obj => {\n        console.log('obj - ', obj);\n        console.log('id - ', id);\n        return obj.id == id;\n      });\n      console.log('parentContact- ', parentContact);\n\n      if (parentContact != null) {\n        setName(parentContact.name);\n        setPhone(parentContact.phone);\n        setEmail(parentContact.email);\n      }\n    } // dispatch(getContact(id));\n\n  }, [contactsNew]); // update the contact\n\n  const onUpdateContact = e => {\n    e.preventDefault();\n    const update_contact = Object.assign({}, {\n      name: name,\n      phone: phone,\n      email: email\n    });\n    dispatch(updateContact(update_contact));\n    console.log(update_contact);\n    history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card border-0 shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: \"Add a Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => onUpdateContact(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Enter Your Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Enter Your Phone Number\",\n            value: phone,\n            onChange: e => setPhone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Enter Your E-mail Address\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          type: \"submit\",\n          children: \"Update Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditContact, \"sTOeJWHEBx6jx1SFyHXTe0l5bqI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useHistory, useParams];\n});\n\n_c = EditContact;\nexport default EditContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditContact\");","map":{"version":3,"sources":["/Users/abhishek/Documents/react-badges/react-badges/src/components/editContact/EditContact.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getContact","updateContact","shortid","useHistory","useParams","EditContact","name","setName","phone","setPhone","email","setEmail","dispatch","contact","state","contactsNew","contacts","history","id","parentContact","find","obj","console","log","onUpdateContact","e","preventDefault","update_contact","Object","assign","push","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,mCAA1C,C,CACA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMgB,QAAQ,GAAGd,WAAW,EAA5B,CAJwB,CAKxB;;AACA,QAAMe,OAAO,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcA,OAA1B,CAA3B;AACA,QAAME,WAAW,GAAGhB,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcG,QAA1B,CAA/B;AAEA,MAAIC,OAAO,GAAGd,UAAU,EAAxB;AACA,MAAI;AAAEe,IAAAA;AAAF,MAASd,SAAS,EAAtB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,WAAW,KAAK,IAApB,EAA0B;AACxB,YAAMI,aAAa,GAAGJ,WAAW,CAACK,IAAZ,CACnBC,GAAD,IAAS;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,GAArB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBL,EAApB;AACA,eAAOG,GAAG,CAACH,EAAJ,IAAUA,EAAjB;AACD,OALmB,CAAtB;AAOAI,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,aAA/B;;AACA,UAAIA,aAAa,IAAI,IAArB,EAA2B;AACzBZ,QAAAA,OAAO,CAACY,aAAa,CAACb,IAAf,CAAP;AACAG,QAAAA,QAAQ,CAACU,aAAa,CAACX,KAAf,CAAR;AACAG,QAAAA,QAAQ,CAACQ,aAAa,CAACT,KAAf,CAAR;AACD;AACF,KAfa,CAgBd;;AACD,GAjBQ,EAiBN,CAACK,WAAD,CAjBM,CAAT,CAZwB,CA+BxB;;AACA,QAAMS,eAAe,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AACvCvB,MAAAA,IAAI,EAAEA,IADiC;AAEvCE,MAAAA,KAAK,EAAEA,KAFgC;AAGvCE,MAAAA,KAAK,EAAEA;AAHgC,KAAlB,CAAvB;AAKAE,IAAAA,QAAQ,CAACX,aAAa,CAAC0B,cAAD,CAAd,CAAR;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,cAAZ;AACAV,IAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAGL,CAAD,IAAOD,eAAe,CAACC,CAAD,CAAtC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,cAFZ;AAGE,YAAA,WAAW,EAAC,iBAHd;AAIE,YAAA,KAAK,EAAEnB,IAJT;AAKE,YAAA,QAAQ,EAAGmB,CAAD,IAAOlB,OAAO,CAACkB,CAAC,CAACM,MAAF,CAASC,KAAV;AAL1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,cAFZ;AAGE,YAAA,WAAW,EAAC,yBAHd;AAIE,YAAA,KAAK,EAAExB,KAJT;AAKE,YAAA,QAAQ,EAAGiB,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACM,MAAF,CAASC,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF,eAmBE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,cAFZ;AAGE,YAAA,WAAW,EAAC,2BAHd;AAIE,YAAA,KAAK,EAAEtB,KAJT;AAKE,YAAA,QAAQ,EAAGe,CAAD,IAAOd,QAAQ,CAACc,CAAC,CAACM,MAAF,CAASC,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnBF,eA4BE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAlFD;;GAAM3B,W;UAIaP,W,EAEDC,W,EACIA,W,EAENI,U,EACDC,S;;;KAVTC,W;AAoFN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContact, updateContact } from '../../redux/actions/ContactAction';\n// eslint-disable-next-line no-unused-vars\nimport shortid from 'shortid';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst EditContact = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const dispatch = useDispatch();\n  // for selecting the contact\n  const contact = useSelector((state) => state.contact.contact);\n  const contactsNew = useSelector((state) => state.contact.contacts);\n\n  let history = useHistory();\n  let { id } = useParams();\n\n  useEffect(() => {\n    if (contactsNew !== null) {\n      const parentContact = contactsNew.find(\n        (obj) => {\n          console.log('obj - ',obj)\n          console.log('id - ',id)\n          return obj.id == id\n        }\n        );\n      console.log('parentContact- ', parentContact);\n      if (parentContact != null) {\n        setName(parentContact.name);\n        setPhone(parentContact.phone);\n        setEmail(parentContact.email);\n      }\n    }\n    // dispatch(getContact(id));\n  }, [contactsNew]);\n\n  // update the contact\n  const onUpdateContact = (e) => {\n    e.preventDefault();\n    const update_contact = Object.assign({}, {\n      name: name,\n      phone: phone,\n      email: email,\n    });\n    dispatch(updateContact(update_contact));\n    console.log(update_contact);\n    history.push('/');\n  };\n  return (\n    <div className='card border-0 shadow'>\n      <div className='card-header'>Add a Contact</div>\n      <div className='card-body'>\n        <form onSubmit={(e) => onUpdateContact(e)}>\n          <div className='form-group'>\n            <input\n              type='text'\n              className='form-control'\n              placeholder='Enter Your Name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              className='form-control'\n              placeholder='Enter Your Phone Number'\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n            />\n          </div>\n          <div className='form-group'>\n            <input\n              type='text'\n              className='form-control'\n              placeholder='Enter Your E-mail Address'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button className='btn btn-warning' type='submit'>\n            Update Contact\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditContact;\n"]},"metadata":{},"sourceType":"module"}